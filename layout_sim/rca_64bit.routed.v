/*
###############################################################
#  Generated by:      Cadence Encounter 14.26-s039_1
#  OS:                Linux x86_64(Host ID EEX052)
#  Generated on:      Fri Apr 23 23:17:04 2021
#  Design:            rca_64bit
#  Command:           saveNetlist results/rca_64bit.routed.v
###############################################################
*/
module bit1adder_0 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(p));
   INV_X1 U4 (.ZN(n2),
	.A(cin));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_1 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   INV_X1 U1 (.ZN(n3),
	.A(p));
   OAI21_X1 U2 (.ZN(count),
	.B2(n3),
	.B1(n1),
	.A(n2));
   INV_X1 U3 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(g));
   XNOR2_X1 U5 (.ZN(outbit),
	.B(n3),
	.A(cin));
endmodule

module bit1adder_2 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;
   wire n4;
   wire n5;

   OAI21_X1 U1 (.ZN(count),
	.B2(n3),
	.B1(cin),
	.A(n4));
   INV_X1 U2 (.ZN(n3),
	.A(p));
   INV_X1 U3 (.ZN(n4),
	.A(g));
   INV_X1 U5 (.ZN(n5),
	.A(cin));
   XNOR2_X1 U6 (.ZN(outbit),
	.B(n5),
	.A(n3));
endmodule

module bit1adder_3 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(count),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_4 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_5 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_6 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_7 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_8 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_9 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_10 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_11 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_12 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_13 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_14 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U4 (.ZN(n2),
	.A(p));
   INV_X1 U5 (.ZN(n3),
	.A(g));
endmodule

module bit1adder_15 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_16 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_17 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_18 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_19 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_20 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_21 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_22 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_23 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U2 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U3 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_24 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_25 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_26 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_27 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_28 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_29 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_30 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_31 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_32 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_33 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_34 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_35 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_36 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_37 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_38 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_39 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_40 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_41 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_42 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_43 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_44 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_45 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_46 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_47 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_48 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_49 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_50 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_51 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_52 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_53 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_54 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_55 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_56 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_57 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_58 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_59 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_60 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_61 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_62 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_63 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;

   OAI21_X1 U1 (.ZN(count),
	.B2(n2),
	.B1(n1),
	.A(n3));
   INV_X1 U2 (.ZN(n1),
	.A(cin));
   INV_X1 U3 (.ZN(n2),
	.A(p));
   INV_X1 U4 (.ZN(n3),
	.A(g));
   XOR2_X1 U6 (.Z(outbit),
	.B(cin),
	.A(p));
endmodule

module bitNRCAdder_N64 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [63:0] add1;
   input [63:0] add2;
   input cin;
   output [63:0] result;
   output cout;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire [63:0] p;
   wire [63:0] g;
   wire [63:1] c_mid;

   bit1adder_0 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_63 block_1__bit1adder_module (.g(g[1]),
	.p(n1),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_62 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_61 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_60 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_59 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_58 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_57 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_56 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(c_mid[9]));
   bit1adder_55 block_9__bit1adder_module (.g(g[9]),
	.p(p[9]),
	.cin(c_mid[9]),
	.outbit(result[9]),
	.count(c_mid[10]));
   bit1adder_54 block_10__bit1adder_module (.g(g[10]),
	.p(p[10]),
	.cin(c_mid[10]),
	.outbit(result[10]),
	.count(c_mid[11]));
   bit1adder_53 block_11__bit1adder_module (.g(g[11]),
	.p(p[11]),
	.cin(c_mid[11]),
	.outbit(result[11]),
	.count(c_mid[12]));
   bit1adder_52 block_12__bit1adder_module (.g(g[12]),
	.p(p[12]),
	.cin(c_mid[12]),
	.outbit(result[12]),
	.count(c_mid[13]));
   bit1adder_51 block_13__bit1adder_module (.g(g[13]),
	.p(p[13]),
	.cin(c_mid[13]),
	.outbit(result[13]),
	.count(c_mid[14]));
   bit1adder_50 block_14__bit1adder_module (.g(g[14]),
	.p(p[14]),
	.cin(c_mid[14]),
	.outbit(result[14]),
	.count(c_mid[15]));
   bit1adder_49 block_15__bit1adder_module (.g(g[15]),
	.p(p[15]),
	.cin(c_mid[15]),
	.outbit(result[15]),
	.count(c_mid[16]));
   bit1adder_48 block_16__bit1adder_module (.g(g[16]),
	.p(p[16]),
	.cin(c_mid[16]),
	.outbit(result[16]),
	.count(c_mid[17]));
   bit1adder_47 block_17__bit1adder_module (.g(g[17]),
	.p(p[17]),
	.cin(c_mid[17]),
	.outbit(result[17]),
	.count(c_mid[18]));
   bit1adder_46 block_18__bit1adder_module (.g(g[18]),
	.p(p[18]),
	.cin(c_mid[18]),
	.outbit(result[18]),
	.count(c_mid[19]));
   bit1adder_45 block_19__bit1adder_module (.g(g[19]),
	.p(p[19]),
	.cin(c_mid[19]),
	.outbit(result[19]),
	.count(c_mid[20]));
   bit1adder_44 block_20__bit1adder_module (.g(g[20]),
	.p(p[20]),
	.cin(c_mid[20]),
	.outbit(result[20]),
	.count(c_mid[21]));
   bit1adder_43 block_21__bit1adder_module (.g(g[21]),
	.p(p[21]),
	.cin(c_mid[21]),
	.outbit(result[21]),
	.count(c_mid[22]));
   bit1adder_42 block_22__bit1adder_module (.g(g[22]),
	.p(p[22]),
	.cin(c_mid[22]),
	.outbit(result[22]),
	.count(c_mid[23]));
   bit1adder_41 block_23__bit1adder_module (.g(g[23]),
	.p(p[23]),
	.cin(c_mid[23]),
	.outbit(result[23]),
	.count(c_mid[24]));
   bit1adder_40 block_24__bit1adder_module (.g(g[24]),
	.p(p[24]),
	.cin(c_mid[24]),
	.outbit(result[24]),
	.count(c_mid[25]));
   bit1adder_39 block_25__bit1adder_module (.g(g[25]),
	.p(p[25]),
	.cin(c_mid[25]),
	.outbit(result[25]),
	.count(c_mid[26]));
   bit1adder_38 block_26__bit1adder_module (.g(g[26]),
	.p(p[26]),
	.cin(c_mid[26]),
	.outbit(result[26]),
	.count(c_mid[27]));
   bit1adder_37 block_27__bit1adder_module (.g(g[27]),
	.p(p[27]),
	.cin(c_mid[27]),
	.outbit(result[27]),
	.count(c_mid[28]));
   bit1adder_36 block_28__bit1adder_module (.g(g[28]),
	.p(p[28]),
	.cin(c_mid[28]),
	.outbit(result[28]),
	.count(c_mid[29]));
   bit1adder_35 block_29__bit1adder_module (.g(g[29]),
	.p(p[29]),
	.cin(c_mid[29]),
	.outbit(result[29]),
	.count(c_mid[30]));
   bit1adder_34 block_30__bit1adder_module (.g(g[30]),
	.p(p[30]),
	.cin(c_mid[30]),
	.outbit(result[30]),
	.count(c_mid[31]));
   bit1adder_33 block_31__bit1adder_module (.g(g[31]),
	.p(p[31]),
	.cin(c_mid[31]),
	.outbit(result[31]),
	.count(c_mid[32]));
   bit1adder_32 block_32__bit1adder_module (.g(g[32]),
	.p(p[32]),
	.cin(c_mid[32]),
	.outbit(result[32]),
	.count(c_mid[33]));
   bit1adder_31 block_33__bit1adder_module (.g(g[33]),
	.p(p[33]),
	.cin(c_mid[33]),
	.outbit(result[33]),
	.count(c_mid[34]));
   bit1adder_30 block_34__bit1adder_module (.g(g[34]),
	.p(p[34]),
	.cin(c_mid[34]),
	.outbit(result[34]),
	.count(c_mid[35]));
   bit1adder_29 block_35__bit1adder_module (.g(g[35]),
	.p(p[35]),
	.cin(c_mid[35]),
	.outbit(result[35]),
	.count(c_mid[36]));
   bit1adder_28 block_36__bit1adder_module (.g(g[36]),
	.p(p[36]),
	.cin(c_mid[36]),
	.outbit(result[36]),
	.count(c_mid[37]));
   bit1adder_27 block_37__bit1adder_module (.g(g[37]),
	.p(p[37]),
	.cin(c_mid[37]),
	.outbit(result[37]),
	.count(c_mid[38]));
   bit1adder_26 block_38__bit1adder_module (.g(g[38]),
	.p(p[38]),
	.cin(c_mid[38]),
	.outbit(result[38]),
	.count(c_mid[39]));
   bit1adder_25 block_39__bit1adder_module (.g(g[39]),
	.p(p[39]),
	.cin(c_mid[39]),
	.outbit(result[39]),
	.count(c_mid[40]));
   bit1adder_24 block_40__bit1adder_module (.g(g[40]),
	.p(p[40]),
	.cin(c_mid[40]),
	.outbit(result[40]),
	.count(c_mid[41]));
   bit1adder_23 block_41__bit1adder_module (.g(g[41]),
	.p(p[41]),
	.cin(c_mid[41]),
	.outbit(result[41]),
	.count(c_mid[42]));
   bit1adder_22 block_42__bit1adder_module (.g(g[42]),
	.p(p[42]),
	.cin(c_mid[42]),
	.outbit(result[42]),
	.count(c_mid[43]));
   bit1adder_21 block_43__bit1adder_module (.g(g[43]),
	.p(p[43]),
	.cin(c_mid[43]),
	.outbit(result[43]),
	.count(c_mid[44]));
   bit1adder_20 block_44__bit1adder_module (.g(g[44]),
	.p(p[44]),
	.cin(c_mid[44]),
	.outbit(result[44]),
	.count(c_mid[45]));
   bit1adder_19 block_45__bit1adder_module (.g(g[45]),
	.p(p[45]),
	.cin(c_mid[45]),
	.outbit(result[45]),
	.count(c_mid[46]));
   bit1adder_18 block_46__bit1adder_module (.g(g[46]),
	.p(p[46]),
	.cin(c_mid[46]),
	.outbit(result[46]),
	.count(c_mid[47]));
   bit1adder_17 block_47__bit1adder_module (.g(g[47]),
	.p(p[47]),
	.cin(c_mid[47]),
	.outbit(result[47]),
	.count(c_mid[48]));
   bit1adder_16 block_48__bit1adder_module (.g(g[48]),
	.p(p[48]),
	.cin(c_mid[48]),
	.outbit(result[48]),
	.count(c_mid[49]));
   bit1adder_15 block_49__bit1adder_module (.g(g[49]),
	.p(p[49]),
	.cin(c_mid[49]),
	.outbit(result[49]),
	.count(c_mid[50]));
   bit1adder_14 block_50__bit1adder_module (.g(g[50]),
	.p(p[50]),
	.cin(c_mid[50]),
	.outbit(result[50]),
	.count(c_mid[51]));
   bit1adder_13 block_51__bit1adder_module (.g(g[51]),
	.p(p[51]),
	.cin(c_mid[51]),
	.outbit(result[51]),
	.count(c_mid[52]));
   bit1adder_12 block_52__bit1adder_module (.g(g[52]),
	.p(p[52]),
	.cin(c_mid[52]),
	.outbit(result[52]),
	.count(c_mid[53]));
   bit1adder_11 block_53__bit1adder_module (.g(g[53]),
	.p(p[53]),
	.cin(c_mid[53]),
	.outbit(result[53]),
	.count(c_mid[54]));
   bit1adder_10 block_54__bit1adder_module (.g(g[54]),
	.p(p[54]),
	.cin(c_mid[54]),
	.outbit(result[54]),
	.count(c_mid[55]));
   bit1adder_9 block_55__bit1adder_module (.g(g[55]),
	.p(p[55]),
	.cin(c_mid[55]),
	.outbit(result[55]),
	.count(c_mid[56]));
   bit1adder_8 block_56__bit1adder_module (.g(g[56]),
	.p(p[56]),
	.cin(c_mid[56]),
	.outbit(result[56]),
	.count(c_mid[57]));
   bit1adder_7 block_57__bit1adder_module (.g(g[57]),
	.p(p[57]),
	.cin(c_mid[57]),
	.outbit(result[57]),
	.count(c_mid[58]));
   bit1adder_6 block_58__bit1adder_module (.g(g[58]),
	.p(p[58]),
	.cin(c_mid[58]),
	.outbit(result[58]),
	.count(c_mid[59]));
   bit1adder_5 block_59__bit1adder_module (.g(g[59]),
	.p(p[59]),
	.cin(c_mid[59]),
	.outbit(result[59]),
	.count(c_mid[60]));
   bit1adder_4 block_60__bit1adder_module (.g(g[60]),
	.p(p[60]),
	.cin(c_mid[60]),
	.outbit(result[60]),
	.count(c_mid[61]));
   bit1adder_3 block_61__bit1adder_module (.g(g[61]),
	.p(p[61]),
	.cin(c_mid[61]),
	.outbit(result[61]),
	.count(c_mid[62]));
   bit1adder_2 block_62__bit1adder_module (.g(g[62]),
	.p(p[62]),
	.cin(c_mid[62]),
	.outbit(result[62]),
	.count(c_mid[63]));
   bit1adder_1 block_63__bit1adder_module (.g(g[63]),
	.p(p[63]),
	.cin(c_mid[63]),
	.outbit(result[63]),
	.count(cout));
   XOR2_X1 U65 (.Z(p[9]),
	.B(add1[9]),
	.A(add2[9]));
   XOR2_X1 U66 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U67 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U68 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U69 (.Z(p[63]),
	.B(add1[63]),
	.A(add2[63]));
   XOR2_X1 U70 (.Z(p[62]),
	.B(add1[62]),
	.A(add2[62]));
   XOR2_X1 U71 (.Z(p[61]),
	.B(add1[61]),
	.A(add2[61]));
   XOR2_X1 U72 (.Z(p[60]),
	.B(add1[60]),
	.A(add2[60]));
   XOR2_X1 U73 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U74 (.Z(p[59]),
	.B(add1[59]),
	.A(add2[59]));
   XOR2_X1 U75 (.Z(p[58]),
	.B(add1[58]),
	.A(add2[58]));
   XOR2_X1 U76 (.Z(p[57]),
	.B(add1[57]),
	.A(add2[57]));
   XOR2_X1 U77 (.Z(p[56]),
	.B(add1[56]),
	.A(add2[56]));
   XOR2_X1 U78 (.Z(p[55]),
	.B(add1[55]),
	.A(add2[55]));
   XOR2_X1 U79 (.Z(p[54]),
	.B(add1[54]),
	.A(add2[54]));
   XOR2_X1 U80 (.Z(p[53]),
	.B(add1[53]),
	.A(add2[53]));
   XOR2_X1 U81 (.Z(p[52]),
	.B(add1[52]),
	.A(add2[52]));
   XOR2_X1 U82 (.Z(p[51]),
	.B(add1[51]),
	.A(add2[51]));
   XOR2_X1 U83 (.Z(p[50]),
	.B(add1[50]),
	.A(add2[50]));
   XOR2_X1 U84 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U85 (.Z(p[49]),
	.B(add1[49]),
	.A(add2[49]));
   XOR2_X1 U86 (.Z(p[48]),
	.B(add1[48]),
	.A(add2[48]));
   XOR2_X1 U87 (.Z(p[47]),
	.B(add1[47]),
	.A(add2[47]));
   XOR2_X1 U88 (.Z(p[46]),
	.B(add1[46]),
	.A(add2[46]));
   XOR2_X1 U89 (.Z(p[45]),
	.B(add1[45]),
	.A(add2[45]));
   XOR2_X1 U90 (.Z(p[44]),
	.B(add1[44]),
	.A(add2[44]));
   XOR2_X1 U91 (.Z(p[43]),
	.B(add1[43]),
	.A(add2[43]));
   XOR2_X1 U92 (.Z(p[42]),
	.B(add1[42]),
	.A(add2[42]));
   XOR2_X1 U93 (.Z(p[41]),
	.B(add1[41]),
	.A(add2[41]));
   XOR2_X1 U94 (.Z(p[40]),
	.B(add1[40]),
	.A(add2[40]));
   XOR2_X1 U95 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U96 (.Z(p[39]),
	.B(add1[39]),
	.A(add2[39]));
   XOR2_X1 U97 (.Z(p[38]),
	.B(add1[38]),
	.A(add2[38]));
   XOR2_X1 U98 (.Z(p[37]),
	.B(add1[37]),
	.A(add2[37]));
   XOR2_X1 U99 (.Z(p[36]),
	.B(add1[36]),
	.A(add2[36]));
   XOR2_X1 U100 (.Z(p[35]),
	.B(add1[35]),
	.A(add2[35]));
   XOR2_X1 U101 (.Z(p[34]),
	.B(add1[34]),
	.A(add2[34]));
   XOR2_X1 U102 (.Z(p[33]),
	.B(add1[33]),
	.A(add2[33]));
   XOR2_X1 U103 (.Z(p[32]),
	.B(add1[32]),
	.A(add2[32]));
   XOR2_X1 U104 (.Z(p[31]),
	.B(add1[31]),
	.A(add2[31]));
   XOR2_X1 U105 (.Z(p[30]),
	.B(add1[30]),
	.A(add2[30]));
   XOR2_X1 U106 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U107 (.Z(p[29]),
	.B(add1[29]),
	.A(add2[29]));
   XOR2_X1 U108 (.Z(p[28]),
	.B(add1[28]),
	.A(add2[28]));
   XOR2_X1 U109 (.Z(p[27]),
	.B(add1[27]),
	.A(add2[27]));
   XOR2_X1 U110 (.Z(p[26]),
	.B(add1[26]),
	.A(add2[26]));
   XOR2_X1 U111 (.Z(p[25]),
	.B(add1[25]),
	.A(add2[25]));
   XOR2_X1 U112 (.Z(p[24]),
	.B(add1[24]),
	.A(add2[24]));
   XOR2_X1 U113 (.Z(p[23]),
	.B(add1[23]),
	.A(add2[23]));
   XOR2_X1 U114 (.Z(p[22]),
	.B(add1[22]),
	.A(add2[22]));
   XOR2_X1 U115 (.Z(p[21]),
	.B(add1[21]),
	.A(add2[21]));
   XOR2_X1 U116 (.Z(p[20]),
	.B(add1[20]),
	.A(add2[20]));
   XOR2_X1 U118 (.Z(p[19]),
	.B(add1[19]),
	.A(add2[19]));
   XOR2_X1 U119 (.Z(p[18]),
	.B(add1[18]),
	.A(add2[18]));
   XOR2_X1 U120 (.Z(p[17]),
	.B(add1[17]),
	.A(add2[17]));
   XOR2_X1 U121 (.Z(p[16]),
	.B(add1[16]),
	.A(add2[16]));
   XOR2_X1 U122 (.Z(p[15]),
	.B(add1[15]),
	.A(add2[15]));
   XOR2_X1 U123 (.Z(p[14]),
	.B(add1[14]),
	.A(add2[14]));
   XOR2_X1 U124 (.Z(p[13]),
	.B(add1[13]),
	.A(add2[13]));
   XOR2_X1 U125 (.Z(p[12]),
	.B(add1[12]),
	.A(add2[12]));
   XOR2_X1 U126 (.Z(p[11]),
	.B(add1[11]),
	.A(add2[11]));
   XOR2_X1 U127 (.Z(p[10]),
	.B(add1[10]),
	.A(add2[10]));
   AND2_X1 U4 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
   AND2_X1 U5 (.ZN(g[50]),
	.A2(add1[50]),
	.A1(add2[50]));
   AND2_X1 U6 (.ZN(g[52]),
	.A2(add1[52]),
	.A1(add2[52]));
   AND2_X1 U8 (.ZN(g[54]),
	.A2(add1[54]),
	.A1(add2[54]));
   AND2_X1 U9 (.ZN(g[58]),
	.A2(add1[58]),
	.A1(add2[58]));
   AND2_X1 U11 (.ZN(g[60]),
	.A2(add1[60]),
	.A1(add2[60]));
   INV_X1 U13 (.ZN(n3),
	.A(add1[0]));
   AND2_X1 U15 (.ZN(g[48]),
	.A2(add1[48]),
	.A1(add2[48]));
   AND2_X1 U16 (.ZN(g[51]),
	.A2(add1[51]),
	.A1(add2[51]));
   AND2_X1 U17 (.ZN(g[53]),
	.A2(add1[53]),
	.A1(add2[53]));
   AND2_X1 U18 (.ZN(g[62]),
	.A2(add1[62]),
	.A1(add2[62]));
   XOR2_X1 U19 (.Z(n1),
	.B(add1[1]),
	.A(add2[1]));
   NAND2_X1 U22 (.ZN(n5),
	.A2(add1[0]),
	.A1(n2));
   INV_X1 U29 (.ZN(n2),
	.A(add2[0]));
   NAND2_X1 U31 (.ZN(n4),
	.A2(add2[0]),
	.A1(n3));
   NAND2_X1 U34 (.ZN(p[0]),
	.A2(n5),
	.A1(n4));
   AND2_X1 U42 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U53 (.ZN(g[37]),
	.A2(add1[37]),
	.A1(add2[37]));
   AND2_X1 U64 (.ZN(g[41]),
	.A2(add1[41]),
	.A1(add2[41]));
   AND2_X1 U117 (.ZN(g[56]),
	.A2(add1[56]),
	.A1(add2[56]));
   AND2_X1 U128 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U129 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U130 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U131 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U132 (.ZN(g[63]),
	.A2(add1[63]),
	.A1(add2[63]));
   AND2_X1 U20 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U3 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U2 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U1 (.ZN(g[9]),
	.A2(add1[9]),
	.A1(add2[9]));
   AND2_X1 U63 (.ZN(g[10]),
	.A2(add1[10]),
	.A1(add2[10]));
   AND2_X1 U62 (.ZN(g[11]),
	.A2(add1[11]),
	.A1(add2[11]));
   AND2_X1 U61 (.ZN(g[12]),
	.A2(add1[12]),
	.A1(add2[12]));
   AND2_X1 U60 (.ZN(g[13]),
	.A2(add1[13]),
	.A1(add2[13]));
   AND2_X1 U59 (.ZN(g[14]),
	.A2(add1[14]),
	.A1(add2[14]));
   AND2_X1 U58 (.ZN(g[15]),
	.A2(add1[15]),
	.A1(add2[15]));
   AND2_X1 U57 (.ZN(g[16]),
	.A2(add1[16]),
	.A1(add2[16]));
   AND2_X1 U56 (.ZN(g[17]),
	.A2(add1[17]),
	.A1(add2[17]));
   AND2_X1 U55 (.ZN(g[18]),
	.A2(add1[18]),
	.A1(add2[18]));
   AND2_X1 U54 (.ZN(g[19]),
	.A2(add1[19]),
	.A1(add2[19]));
   AND2_X1 U52 (.ZN(g[20]),
	.A2(add1[20]),
	.A1(add2[20]));
   AND2_X1 U51 (.ZN(g[21]),
	.A2(add1[21]),
	.A1(add2[21]));
   AND2_X1 U50 (.ZN(g[22]),
	.A2(add1[22]),
	.A1(add2[22]));
   AND2_X1 U49 (.ZN(g[23]),
	.A2(add1[23]),
	.A1(add2[23]));
   AND2_X1 U48 (.ZN(g[24]),
	.A2(add1[24]),
	.A1(add2[24]));
   AND2_X1 U47 (.ZN(g[25]),
	.A2(add1[25]),
	.A1(add2[25]));
   AND2_X1 U46 (.ZN(g[26]),
	.A2(add1[26]),
	.A1(add2[26]));
   AND2_X1 U45 (.ZN(g[27]),
	.A2(add1[27]),
	.A1(add2[27]));
   AND2_X1 U44 (.ZN(g[28]),
	.A2(add1[28]),
	.A1(add2[28]));
   AND2_X1 U43 (.ZN(g[29]),
	.A2(add1[29]),
	.A1(add2[29]));
   AND2_X1 U41 (.ZN(g[30]),
	.A2(add1[30]),
	.A1(add2[30]));
   AND2_X1 U40 (.ZN(g[31]),
	.A2(add1[31]),
	.A1(add2[31]));
   AND2_X1 U39 (.ZN(g[32]),
	.A2(add1[32]),
	.A1(add2[32]));
   AND2_X1 U38 (.ZN(g[33]),
	.A2(add1[33]),
	.A1(add2[33]));
   AND2_X1 U37 (.ZN(g[34]),
	.A2(add1[34]),
	.A1(add2[34]));
   AND2_X1 U36 (.ZN(g[35]),
	.A2(add1[35]),
	.A1(add2[35]));
   AND2_X1 U35 (.ZN(g[36]),
	.A2(add1[36]),
	.A1(add2[36]));
   AND2_X1 U33 (.ZN(g[38]),
	.A2(add1[38]),
	.A1(add2[38]));
   AND2_X1 U32 (.ZN(g[39]),
	.A2(add1[39]),
	.A1(add2[39]));
   AND2_X1 U30 (.ZN(g[40]),
	.A2(add1[40]),
	.A1(add2[40]));
   AND2_X1 U28 (.ZN(g[42]),
	.A2(add1[42]),
	.A1(add2[42]));
   AND2_X1 U27 (.ZN(g[43]),
	.A2(add1[43]),
	.A1(add2[43]));
   AND2_X1 U26 (.ZN(g[44]),
	.A2(add1[44]),
	.A1(add2[44]));
   AND2_X1 U25 (.ZN(g[45]),
	.A2(add1[45]),
	.A1(add2[45]));
   AND2_X1 U24 (.ZN(g[46]),
	.A2(add1[46]),
	.A1(add2[46]));
   AND2_X1 U23 (.ZN(g[47]),
	.A2(add1[47]),
	.A1(add2[47]));
   AND2_X1 U21 (.ZN(g[49]),
	.A2(add1[49]),
	.A1(add2[49]));
   AND2_X1 U14 (.ZN(g[55]),
	.A2(add1[55]),
	.A1(add2[55]));
   AND2_X1 U12 (.ZN(g[57]),
	.A2(add1[57]),
	.A1(add2[57]));
   AND2_X1 U10 (.ZN(g[59]),
	.A2(add1[59]),
	.A1(add2[59]));
   AND2_X1 U7 (.ZN(g[61]),
	.A2(add1[61]),
	.A1(add2[61]));
endmodule

module rca_64bit (
	a, 
	b, 
	cin, 
	sum, 
	cout);
   input [63:0] a;
   input [63:0] b;
   input cin;
   output [63:0] sum;
   output cout;

   bitNRCAdder_N64 bitNRCAdder1_i1 (.add1(a),
	.add2(b),
	.cin(cin),
	.result(sum),
	.cout(cout));
endmodule

